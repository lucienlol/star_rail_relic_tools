package com.example.starrail.po;

import java.util.ArrayList;
import java.util.List;

public class CharRelicSetExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public CharRelicSetExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCharRelicSetIdIsNull() {
            addCriterion("char_relic_set_id is null");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdIsNotNull() {
            addCriterion("char_relic_set_id is not null");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdEqualTo(Integer value) {
            addCriterion("char_relic_set_id =", value, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdNotEqualTo(Integer value) {
            addCriterion("char_relic_set_id <>", value, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdGreaterThan(Integer value) {
            addCriterion("char_relic_set_id >", value, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("char_relic_set_id >=", value, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdLessThan(Integer value) {
            addCriterion("char_relic_set_id <", value, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdLessThanOrEqualTo(Integer value) {
            addCriterion("char_relic_set_id <=", value, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdIn(List<Integer> values) {
            addCriterion("char_relic_set_id in", values, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdNotIn(List<Integer> values) {
            addCriterion("char_relic_set_id not in", values, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdBetween(Integer value1, Integer value2) {
            addCriterion("char_relic_set_id between", value1, value2, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharRelicSetIdNotBetween(Integer value1, Integer value2) {
            addCriterion("char_relic_set_id not between", value1, value2, "charRelicSetId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdIsNull() {
            addCriterion("character_id is null");
            return (Criteria) this;
        }

        public Criteria andCharacterIdIsNotNull() {
            addCriterion("character_id is not null");
            return (Criteria) this;
        }

        public Criteria andCharacterIdEqualTo(Integer value) {
            addCriterion("character_id =", value, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdNotEqualTo(Integer value) {
            addCriterion("character_id <>", value, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdGreaterThan(Integer value) {
            addCriterion("character_id >", value, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("character_id >=", value, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdLessThan(Integer value) {
            addCriterion("character_id <", value, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdLessThanOrEqualTo(Integer value) {
            addCriterion("character_id <=", value, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdIn(List<Integer> values) {
            addCriterion("character_id in", values, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdNotIn(List<Integer> values) {
            addCriterion("character_id not in", values, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdBetween(Integer value1, Integer value2) {
            addCriterion("character_id between", value1, value2, "characterId");
            return (Criteria) this;
        }

        public Criteria andCharacterIdNotBetween(Integer value1, Integer value2) {
            addCriterion("character_id not between", value1, value2, "characterId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdIsNull() {
            addCriterion("relic_set_id is null");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdIsNotNull() {
            addCriterion("relic_set_id is not null");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdEqualTo(Integer value) {
            addCriterion("relic_set_id =", value, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdNotEqualTo(Integer value) {
            addCriterion("relic_set_id <>", value, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdGreaterThan(Integer value) {
            addCriterion("relic_set_id >", value, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("relic_set_id >=", value, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdLessThan(Integer value) {
            addCriterion("relic_set_id <", value, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdLessThanOrEqualTo(Integer value) {
            addCriterion("relic_set_id <=", value, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdIn(List<Integer> values) {
            addCriterion("relic_set_id in", values, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdNotIn(List<Integer> values) {
            addCriterion("relic_set_id not in", values, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdBetween(Integer value1, Integer value2) {
            addCriterion("relic_set_id between", value1, value2, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetIdNotBetween(Integer value1, Integer value2) {
            addCriterion("relic_set_id not between", value1, value2, "relicSetId");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeIsNull() {
            addCriterion("relic_set_type is null");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeIsNotNull() {
            addCriterion("relic_set_type is not null");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeEqualTo(Integer value) {
            addCriterion("relic_set_type =", value, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeNotEqualTo(Integer value) {
            addCriterion("relic_set_type <>", value, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeGreaterThan(Integer value) {
            addCriterion("relic_set_type >", value, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("relic_set_type >=", value, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeLessThan(Integer value) {
            addCriterion("relic_set_type <", value, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeLessThanOrEqualTo(Integer value) {
            addCriterion("relic_set_type <=", value, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeIn(List<Integer> values) {
            addCriterion("relic_set_type in", values, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeNotIn(List<Integer> values) {
            addCriterion("relic_set_type not in", values, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeBetween(Integer value1, Integer value2) {
            addCriterion("relic_set_type between", value1, value2, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andRelicSetTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("relic_set_type not between", value1, value2, "relicSetType");
            return (Criteria) this;
        }

        public Criteria andEffectDemandIsNull() {
            addCriterion("effect_demand is null");
            return (Criteria) this;
        }

        public Criteria andEffectDemandIsNotNull() {
            addCriterion("effect_demand is not null");
            return (Criteria) this;
        }

        public Criteria andEffectDemandEqualTo(Integer value) {
            addCriterion("effect_demand =", value, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandNotEqualTo(Integer value) {
            addCriterion("effect_demand <>", value, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandGreaterThan(Integer value) {
            addCriterion("effect_demand >", value, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandGreaterThanOrEqualTo(Integer value) {
            addCriterion("effect_demand >=", value, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandLessThan(Integer value) {
            addCriterion("effect_demand <", value, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandLessThanOrEqualTo(Integer value) {
            addCriterion("effect_demand <=", value, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandIn(List<Integer> values) {
            addCriterion("effect_demand in", values, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandNotIn(List<Integer> values) {
            addCriterion("effect_demand not in", values, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandBetween(Integer value1, Integer value2) {
            addCriterion("effect_demand between", value1, value2, "effectDemand");
            return (Criteria) this;
        }

        public Criteria andEffectDemandNotBetween(Integer value1, Integer value2) {
            addCriterion("effect_demand not between", value1, value2, "effectDemand");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table char_relic_set
     *
     * @mbg.generated do_not_delete_during_merge Sat Nov 11 15:15:58 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table char_relic_set
     *
     * @mbg.generated Sat Nov 11 15:15:58 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}