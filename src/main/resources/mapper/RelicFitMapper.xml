<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.starrail.dao.RelicFitMapper">
  <resultMap id="BaseResultMap" type="com.example.starrail.po.RelicFit">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="relic_fit_id" jdbcType="INTEGER" property="relicFitId" />
    <result column="relic_id" jdbcType="INTEGER" property="relicId" />
    <result column="character_id" jdbcType="INTEGER" property="characterId" />
    <result column="is_main_stat_fit" jdbcType="BIT" property="isMainStatFit" />
    <result column="is_relic_set_fit" jdbcType="BIT" property="isRelicSetFit" />
    <result column="sub_stat_fitness" jdbcType="DOUBLE" property="subStatFitness" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.starrail.po.RelicFit">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="sub_stat_fit_desc" jdbcType="LONGVARCHAR" property="subStatFitDesc" />
  </resultMap>
  <resultMap id="RelicFitDetail" type="com.example.starrail.entity.RelicFitDetail">
    <id column="relic_fit_id" jdbcType="INTEGER" property="relicFitId" />
    <result column="relic_id" jdbcType="INTEGER" property="relicId" />
    <result column="character_id" jdbcType="INTEGER" property="characterId" />
    <result column="is_main_stat_fit" jdbcType="BIT" property="isMainStatFit" />
    <result column="is_relic_set_fit" jdbcType="BIT" property="isRelicSetFit" />
    <result column="sub_stat_fitness" jdbcType="DOUBLE" property="subStatFitness" />
    <result column="sub_stat_fit_desc" jdbcType="LONGVARCHAR" property="subStatFitDesc" />
    <result column="relic_level" jdbcType="INTEGER" property="relicLevel" />
    <result column="relic_set_id" jdbcType="INTEGER" property="relicSetId" />
    <result column="relic_type_id" jdbcType="INTEGER" property="relicTypeId" />
    <result column="main_stat_id" jdbcType="INTEGER" property="mainStatId" />
    <result column="sub_stat_values" jdbcType="VARCHAR" property="subStatValues" />
    <result column="character_name" jdbcType="VARCHAR" property="characterName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    relic_fit_id, relic_id, character_id, is_main_stat_fit, is_relic_set_fit, sub_stat_fitness
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    sub_stat_fit_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.starrail.po.RelicFitExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from relic_fit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.starrail.po.RelicFitExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from relic_fit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from relic_fit
    where relic_fit_id = #{relicFitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from relic_fit
    where relic_fit_id = #{relicFitId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.starrail.po.RelicFitExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from relic_fit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.starrail.po.RelicFit">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into relic_fit (relic_fit_id, relic_id, character_id, 
      is_main_stat_fit, is_relic_set_fit, sub_stat_fitness, 
      sub_stat_fit_desc)
    values (#{relicFitId,jdbcType=INTEGER}, #{relicId,jdbcType=INTEGER}, #{characterId,jdbcType=INTEGER}, 
      #{isMainStatFit,jdbcType=BIT}, #{isRelicSetFit,jdbcType=BIT}, #{subStatFitness,jdbcType=DOUBLE}, 
      #{subStatFitDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.starrail.po.RelicFit">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into relic_fit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relicFitId != null">
        relic_fit_id,
      </if>
      <if test="relicId != null">
        relic_id,
      </if>
      <if test="characterId != null">
        character_id,
      </if>
      <if test="isMainStatFit != null">
        is_main_stat_fit,
      </if>
      <if test="isRelicSetFit != null">
        is_relic_set_fit,
      </if>
      <if test="subStatFitness != null">
        sub_stat_fitness,
      </if>
      <if test="subStatFitDesc != null">
        sub_stat_fit_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relicFitId != null">
        #{relicFitId,jdbcType=INTEGER},
      </if>
      <if test="relicId != null">
        #{relicId,jdbcType=INTEGER},
      </if>
      <if test="characterId != null">
        #{characterId,jdbcType=INTEGER},
      </if>
      <if test="isMainStatFit != null">
        #{isMainStatFit,jdbcType=BIT},
      </if>
      <if test="isRelicSetFit != null">
        #{isRelicSetFit,jdbcType=BIT},
      </if>
      <if test="subStatFitness != null">
        #{subStatFitness,jdbcType=DOUBLE},
      </if>
      <if test="subStatFitDesc != null">
        #{subStatFitDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.starrail.po.RelicFitExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from relic_fit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getDetailByQuery" parameterType="com.example.starrail.entity.RelicFitQuery" resultMap="RelicFitDetail">
    select
    a.relic_fit_id, a.relic_id, a.character_id, a.is_main_stat_fit, a.is_relic_set_fit, a.sub_stat_fitness,
    a.sub_stat_fit_desc,
    b.relic_level, b.relic_set_id, b.relic_type_id, b.main_stat_id, b.sub_stat_values, c.character_name
    from (
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from relic_fit
    <where>
      1 = 1
      <if test="query.relicFitIdList != null and !query.relicFitIdList.isEmpty()">
        and relic_fit_id in
          <foreach collection="query.relicFitIdList" open="(" close=")" separator="," item="item" index="i">
            #{item}
          </foreach>
      </if>
      <if test="query.relicIdList != null and !query.relicIdList.isEmpty()">
        and relic_id in
          <foreach collection="query.relicIdList" open="(" close=")" separator="," item="item" index="i">
              #{item}
          </foreach>
      </if>
      <if test="query.characterIdList != null and !query.characterIdList.isEmpty()">
        and character_id in
          <foreach collection="query.characterIdList" open="(" close=")" separator="," item="item" index="i">
            #{item}
          </foreach>
      </if>
    </where>
    ) a join (select
    relic_entity_id, relic_level, relic_set_id, relic_type_id, main_stat_id, sub_stat_values from relic_entity
    <where>
      1 = 1
      <if test="query.relicLevelList != null and !query.relicLevelList.isEmpty()">
        and relic_level in
          <foreach collection="query.relicLevelList" open="(" close=")" separator="," item="item" index="i">
            #{item}
          </foreach>
      </if>
      <if test="query.relicTypeList != null and !query.relicTypeList.isEmpty()">
        and relic_type_id in
        <foreach collection="query.relicTypeList" open="(" close=")" separator="," item="item" index="i">
          #{item}
        </foreach>
      </if>
      <if test="query.relicSetIdList != null and !query.relicSetIdList.isEmpty()">
        and relic_set_id in
          <foreach collection="query.relicSetIdList" open="(" close=")" separator="," item="item" index="i">
            #{item}
          </foreach>
      </if>
      <if test="query.mainStatIdList != null and !query.mainStatIdList.isEmpty()">
        and main_stat_id in
          <foreach collection="query.mainStatIdList" open="(" close=")" separator="," item="item" index="i">
            #{item}
          </foreach>
      </if>
    </where>
    ) b on a.relic_id = b.relic_entity_id
    join star_rail_character c on a.character_id = c.character_id
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relic_fit
    <set>
      <if test="record.relicFitId != null">
        relic_fit_id = #{record.relicFitId,jdbcType=INTEGER},
      </if>
      <if test="record.relicId != null">
        relic_id = #{record.relicId,jdbcType=INTEGER},
      </if>
      <if test="record.characterId != null">
        character_id = #{record.characterId,jdbcType=INTEGER},
      </if>
      <if test="record.isMainStatFit != null">
        is_main_stat_fit = #{record.isMainStatFit,jdbcType=BIT},
      </if>
      <if test="record.isRelicSetFit != null">
        is_relic_set_fit = #{record.isRelicSetFit,jdbcType=BIT},
      </if>
      <if test="record.subStatFitness != null">
        sub_stat_fitness = #{record.subStatFitness,jdbcType=DOUBLE},
      </if>
      <if test="record.subStatFitDesc != null">
        sub_stat_fit_desc = #{record.subStatFitDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relic_fit
    set relic_fit_id = #{record.relicFitId,jdbcType=INTEGER},
      relic_id = #{record.relicId,jdbcType=INTEGER},
      character_id = #{record.characterId,jdbcType=INTEGER},
      is_main_stat_fit = #{record.isMainStatFit,jdbcType=BIT},
      is_relic_set_fit = #{record.isRelicSetFit,jdbcType=BIT},
      sub_stat_fitness = #{record.subStatFitness,jdbcType=DOUBLE},
      sub_stat_fit_desc = #{record.subStatFitDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relic_fit
    set relic_fit_id = #{record.relicFitId,jdbcType=INTEGER},
      relic_id = #{record.relicId,jdbcType=INTEGER},
      character_id = #{record.characterId,jdbcType=INTEGER},
      is_main_stat_fit = #{record.isMainStatFit,jdbcType=BIT},
      is_relic_set_fit = #{record.isRelicSetFit,jdbcType=BIT},
      sub_stat_fitness = #{record.subStatFitness,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.starrail.po.RelicFit">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relic_fit
    <set>
      <if test="relicId != null">
        relic_id = #{relicId,jdbcType=INTEGER},
      </if>
      <if test="characterId != null">
        character_id = #{characterId,jdbcType=INTEGER},
      </if>
      <if test="isMainStatFit != null">
        is_main_stat_fit = #{isMainStatFit,jdbcType=BIT},
      </if>
      <if test="isRelicSetFit != null">
        is_relic_set_fit = #{isRelicSetFit,jdbcType=BIT},
      </if>
      <if test="subStatFitness != null">
        sub_stat_fitness = #{subStatFitness,jdbcType=DOUBLE},
      </if>
      <if test="subStatFitDesc != null">
        sub_stat_fit_desc = #{subStatFitDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where relic_fit_id = #{relicFitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.starrail.po.RelicFit">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relic_fit
    set relic_id = #{relicId,jdbcType=INTEGER},
      character_id = #{characterId,jdbcType=INTEGER},
      is_main_stat_fit = #{isMainStatFit,jdbcType=BIT},
      is_relic_set_fit = #{isRelicSetFit,jdbcType=BIT},
      sub_stat_fitness = #{subStatFitness,jdbcType=DOUBLE},
      sub_stat_fit_desc = #{subStatFitDesc,jdbcType=LONGVARCHAR}
    where relic_fit_id = #{relicFitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.starrail.po.RelicFit">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update relic_fit
    set relic_id = #{relicId,jdbcType=INTEGER},
      character_id = #{characterId,jdbcType=INTEGER},
      is_main_stat_fit = #{isMainStatFit,jdbcType=BIT},
      is_relic_set_fit = #{isRelicSetFit,jdbcType=BIT},
      sub_stat_fitness = #{subStatFitness,jdbcType=DOUBLE}
    where relic_fit_id = #{relicFitId,jdbcType=INTEGER}
  </update>
</mapper>